ALL := *.m;

##

# ###############################################################
# Default documentation for parameters
# ###############################################################
# Syntax:
# add(params) = <pname> => """ <text> """;

add(params) = ( model => """A KerMor full model @type models.BaseFullModel""",
		rmodel => """A KerMor reduced model @type models.ReducedModel""",
        t => """The current time(s) `t \in [0, T]` @type double""",
        ti => """The time samples `t_0, \ldots, t_N` @type rowvec<double>""",
		x => """The state variable vector `x(t)` @type colvec<double>""",
        xi => """The state variable samples `x_0,\ldots,x_N = x(t_0),\ldots x(t_N) \in \R^d` @type matrix<double>""",
		mu => """The currently used parameter `\mu`. Set to `[]` if not used. @type colvec<double>""",
        mui => """The parameter samples `\mu_0,\ldots,\mu_N`. Set to `[]` if not used. @type matrix<double>""",
		inputidx => """ The index `i` of the currently used input function `u_i(t)`. Set to `[]` if not used. @type integer""",
		y => """The output variable vector `y(t) = C(t,\mu)x(t),~t=0\ldots T` (general notation) @type matrix<double>""",
        atd => """The approximation training data. @type data.ApproxTrainData""",
        kexp => """A kernel expansion. @type kernels.KernelExpansion""",
        copy => """The subclass instance where to copy the local properties to""",
        ctime => """The computation time @type double""");

# ###############################################################
# Default documentation for fields
# ###############################################################
# Syntax:
# add(fields) = ( <pname>.<fieldname1> => """ <text1> """,
#                 <pname>.<fieldname2> => """ <text2> """);

# ###############################################################
# Global group settings
# ###############################################################
# Syntax:
# glob = <folder or filename (regexp allowed)> {
#  groups = <groupref>;
#  add(doc)      = """ <some extra doc for all files> """;
#  add(extra)    = """ <text at end of comments> """;
#  glob = <subfolder or files> {
#    <statements>
#  };
# }
 
# add(doc)      = """ docu for all functions !!! """;
# add(extra)    = """ extra comments: @ref s_rand !!!! """;